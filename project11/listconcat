
// Node *ptr = head;
// Node *qtr = mylist.head;
//
// while (ptr->next != NULL) // get to the end of list 1
//     ptr = ptr->next;
//
// while (qtr->next != NULL)
// {
//     ptr = ptr->next;
//     ptr->item = qtr->item;
//     qtr = qtr->next;
// }
// ptr->item = qtr->item;
// ptr->next = NULL;
//
// return List<T> ptr;



// Node *frontPtr = head;
// Node *mylistPtr = mylist.head;
// Node *trailPtr = NULL;
// Node *newNodePtr;
// newNodePtr = new Node;
// int curInd = 0;
//
// while (frontPtr != NULL)
// {
//     trailPtr = frontPtr;
//     frontPtr = frontPtr->next;
// }
//
//
// while (mylistPtr != NULL)
// {
//     newNodePtr = mylistPtr;
//     trailPtr->next = newNodePtr;
//     mylistPtr = mylistPtr->next;
// }
//
// frontPtr = head;
// return List<T> finalPtr(frontPtr);
